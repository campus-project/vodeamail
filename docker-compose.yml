version: '3.3'

services:
#  api-gateway:
#    image: "vodeamail-api-gateway:dev"
#    build:
#      context: ./api-gateway
#      dockerfile: dev.dockerfile
#    volumes:
#      - ./api-gateway:/app
#    container_name: vodeamail-api-gateway
#    restart: "on-failure"
#    ports:
#      - "3010:3010"
#    environment:
#      APP_HOST: "0.0.0.0"
#      APP_PORT: "3010"
#      APP_ENV: "local"
#      DB_HOST: "mysql"
#      DB_PORT: "3306"
#      DB_DATABASE: "vodeamail-api-gateway"
#      DB_USERNAME: "homestead"
#      DB_PASSWORD: "secret"
#      REDIS_URL: "redis://redis:6379"
#      JWT_SECRET: "base64:o6Zep11WwsKJMEt4oe37BYUzqIx1MqsNU2Z5tACTrto="
#      JWT_EXPIRES_IN: "30m"
#      VODEA_CLOUD_TOKEN_URL: "https://www.vodea.cloud/oauth/token"
#      VODEA_CLOUD_ACCOUNT_URL: "https://www.vodea.cloud/api/me"
#      VODEA_CLOUD_CLIENT_ID: "92f1470f-938e-4805-8191-0d4c11a14f98"
#      VODEA_CLOUD_CLIENT_SECRET: "ev3H1ff9za5B2BhZiXf3XsvZOWwgGvANiA0UXMPH"
#    healthcheck:
#      test: [ "CMD", "wget", "localhost:3010/health -q -O - > /dev/null 2>&1" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
#    networks:
#      - infrastrucuture
#    depends_on:
#      - mysql
#      - redis
#
#  account-service:
#    image: "vodeamail-account-service:dev"
#    build:
#      context: ./microservices/vodeamail-account-service
#      dockerfile: dev.dockerfile
#    volumes:
#      - ./microservices/vodeamail-account-service:/app
#    container_name: vodeamail-account-service
#    restart: "on-failure"
#    environment:
#      APP_ENV: "local"
#      DB_HOST: "mysql"
#      DB_PORT: "3306"
#      DB_DATABASE: "vodeamail-account-service"
#      DB_USERNAME: "homestead"
#      DB_PASSWORD: "secret"
#      REDIS_URL: "redis://redis:6379"
#    networks:
#      - infrastrucuture
#    depends_on:
#      - mysql
#      - redis
#
#  audience-service:
#    image: "vodeamail-audience-service:dev"
#    build:
#      context: ./microservices/vodeamail-audience-service
#      dockerfile: dev.dockerfile
#    volumes:
#      - ./microservices/vodeamail-audience-service:/app
#    container_name: vodeamail-audience-service
#    restart: "on-failure"
#    environment:
#      APP_ENV: "local"
#      DB_HOST: "mysql"
#      DB_PORT: "3306"
#      DB_DATABASE: "vodeamail-audience-service"
#      DB_USERNAME: "homestead"
#      DB_PASSWORD: "secret"
#      REDIS_URL: "redis://redis:6379"
#    networks:
#      - infrastrucuture
#    depends_on:
#      - mysql
#      - redis
#
#  campaign-service:
#    image: "vodeamail-campaign-service:dev"
#    build:
#      context: ./microservices/vodeamail-campaign-service
#      dockerfile: dev.dockerfile
#    volumes:
#      - ./microservices/vodeamail-campaign-service:/app
#    container_name: vodeamail-campaign-service
#    restart: "on-failure"
#    environment:
#      APP_ENV: "local"
#      DB_HOST: "mysql"
#      DB_PORT: "3306"
#      DB_DATABASE: "vodeamail-campaign-service"
#      DB_USERNAME: "homestead"
#      DB_PASSWORD: "secret"
#      REDIS_URL: "redis://redis:6379"
#      ANALYTIC_OPEN_URL: http://localhost:3010/a/o
#      ANALYTIC_CLICK_URL: http://localhost:3010/a/c
#      ANALYTIC_UNSUBSCRIBE_URL: http://localhost:3010/a/u
#    networks:
#      - infrastrucuture
#    depends_on:
#      - mysql
#      - redis
#
#  mailer-service:
#    image: "vodeamail-mailer-service:dev"
#    build:
#      context: ./microservices/vodeamail-mailer-service
#      dockerfile: dev.dockerfile
#    volumes:
#      - ./microservices/vodeamail-mailer-service:/app
#    container_name: vodeamail-mailer-service
#    restart: "on-failure"
#    environment:
#      APP_ENV: "local"
#      DB_HOST: "mysql"
#      DB_PORT: "3306"
#      DB_DATABASE: "vodeamail-mailer-service"
#      DB_USERNAME: "homestead"
#      DB_PASSWORD: "secret"
#      REDIS_URL: "redis://redis:6379"
#    networks:
#      - infrastrucuture
#    depends_on:
#      - mysql
#      - redis

  docs:
    image: "swaggerapi/swagger-ui:v3.25.0"
    container_name: vodeamail-docs
    restart: "on-failure"
    ports:
      - "3099:8080"
    volumes:
      - "./docs/openapi/openapi-spec.yaml:/usr/share/spec/openapi-spec.yaml"
    environment:
      SWAGGER_JSON: "/usr/share/spec/openapi-spec.yaml"
    healthcheck:
      test: [ "CMD", "wget", "localhost:8080 -q -O - > /dev/null 2>&1" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - infrastrucuture

  mysql:
    image: "mysql:5.7"
    container_name: mysql
    restart: unless-stopped
    volumes:
      - ./docker/mysql/provision/mysql/init/:/docker-entrypoint-initdb.d
      - ./docker/mysql/data:/var/lib/mysql
    ports:
      - '4306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: 'secret'
      MYSQL_PASSWORD: 'secret'
      MYSQL_USER: 'homestead'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - infrastrucuture

  redis:
    image: 'bitnami/redis:latest'
    container_name: redis
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '7379:6379'
    volumes:
      - ./docker/redis/data:/bitnami/redis'
    networks:
      - infrastrucuture

networks:
  infrastrucuture:
    driver: bridge
